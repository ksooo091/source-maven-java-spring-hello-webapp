pipeline {
  agent {
    kubernetes {
      yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: maven
    image: maven:3.8.6-openjdk-8
    command:
    - sleep
    args:
    - infinity
  - name: git
    image: alpine/git
    command:
    - sleep
    args:
    - infinity
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    env:
      - name: githubEmail
        valueFrom:
          secretKeyRef:
            name: gitsecret
            key: githubEmail
      - name: githubUser
        valueFrom:
          secretKeyRef:
            name: gitsecret
            key: githubUser
      - name: githubURL
        valueFrom:
          secretKeyRef:
            name: gitsecret
            key: githubURL
      - name: ghcrimage
        valueFrom:
          secretKeyRef:
            name: gitsecret
            key: ghcrimage

    command:
    - sleep
    args:
    - infinity
    volumeMounts:
    - name: registry-credentials
      mountPath: /kaniko/.docker
  volumes:
  - name: registry-credentials
    secret:
      secretName: regcred
      items:
      - key: .dockerconfigjson
        path: config.json
'''
    }
  }
  stages {
    stage('Checkout') {
      steps {
        container('maven') {
          git branch: 'main', url: 'https://github.com/ksooo091/source-maven-java-spring-hello-webapp.git'
        }
      }
    }
    stage('Build') {
      steps {
        container('maven') {
          sh 'mvn clean package -DskipTests=true'
        }
      }
    }
    stage('Test') {
      steps {
        container('maven') {
          sh 'mvn test'
        }
      }
    }
    stage('Build & Tag & Push Docker Image') {
      steps {
        container('kaniko') {
          sh 'executor --context=dir://$WORKSPACE --destination=ghcr.io/ksooo091/mvn-test:$BUILD_NUMBER --destination=ghcr.io/ksooo091/mvn-test:latest'
        }
      }
    }
    stage('Update K8s Manifests & Push') {
      environment {
        githubURL = "https://github.com/ksooo091/ArgoCdStudyRepo.git"

      }
      steps {
        container('git') {
          git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}"
          sh "echo $githubURL"
          sh "git config --global --add safe.directory ${workspace}"
          sh "git config --global user.name $githubUser"
          sh "git config --global user.email $githubEmail"
          sh 'sed -i "s/image:.*/image: $ghcrimage:${BUILD_NUMBER}/g" deployment.yaml'
          sh 'git add deployment.yaml'
          sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"'
          withCredentials([gitUsernamePassword(credentialsId: 'github-credential', gitToolName: 'Default')]) {
            sh 'git push --set-upstream origin main'
          }
        }
      }
    }
  }
}
